# This is a basic workflow to help you get started with Actions

name: CI

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      PYTHON: 3.9
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: 'true'
    - name: Set up Python ${{ env.PYTHON }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON }}
    - name: Python info
      run: |
        which python
        python --version
    - name: Install Tox
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox
    - name: Check format
      run: tox -e format
    - name: Run linters
      continue-on-error: true
      run: tox -e lint

  venv:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11' ]
        experimental: [ false ]
        os: [ ubuntu-22.04 ]
    steps:
      - name: Install system packages
        run: |
          sudo apt update
          sudo apt install libudunits2-dev
      - uses: actions/checkout@v3
        with:
          lfs: 'true'
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Python info
        run: |
          which python
          python --version
      - name: Cache pip and tox
        uses: actions/cache@v3
        if: ${{ ! matrix.experimental }}
        with:
          path: |
            ~/.cache/pip
            ~/.cache/srtm
            .tox
          key: ${{ matrix.os }}-tox-${{ matrix.python-version }}-${{ hashFiles('setup.cfg', 'pyproject.toml') }}
      - name: Install Tox
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      - name: Run test
        continue-on-error: ${{ matrix.experimental }}
        run: tox -e py